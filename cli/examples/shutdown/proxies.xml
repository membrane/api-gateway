<spring:beans xmlns="http://membrane-soa.org/proxies/1/"
    xmlns:spring="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://membrane-soa.org/proxies/1/ http://membrane-soa.org/schemas/proxies-1.xsd">

    <router>
        <serviceProxy name="predic8.com" port="2000" method="POST" ip="127.0.0.1" >
            <!-- Accessible only via localhost interface ( ip="127.0.0.1" ).
                 Be careful, if you set up shutdown interceptor to public IP-address.
                 Be carefull about https://github.com/membrane/service-proxy/issues/170
                 Maybe this could be better in case of more interfaces: 
                 <serviceProxy name="predic8.com" port="2000" method="POST" host="localhost" >
            -->
            <!-- Only for specific path.
                 Be careful, putting secret code to URL is not good idea, URLs are usually logged. -->
            <path>/shutdown</path>

            <!-- !!! don't forget set up security !!! --> 
            <basicAuthentication>
                <user name="abc" password="def"/>
            </basicAuthentication> 

            <if test="exc.request.bodyAsStringDecoded.contains('secret code')">
                <shutdown />
            </if>
            <!-- else / default -->
            <groovy>
                exc.setResponse(
                    Response.badRequest().contentType("text/plain").body("Body doesn't contain 'secret code'").build())
                RETURN
            </groovy>
        </serviceProxy>
    </router>

</spring:beans>

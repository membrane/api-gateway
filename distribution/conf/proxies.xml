<spring:beans xmlns:spring="http://www.springframework.org/schema/beans"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xmlns="http://membrane-soa.org/proxies/1/" xmlns:lang="http://www.springframework.org/schema/lang"
              xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
					    http://membrane-soa.org/proxies/1/ http://membrane-soa.org/schemas/proxies-1.xsd http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd">

    <spring:bean class="com.predic8.membrane.core.interceptor.apikey.stores.ApiKeyFileStore">
        <spring:property name="location" value="./keys.txt" />
    </spring:bean>

    <router>

        <api port="2000">
            <response>
                <static>Not Found!</static>
            </response>
            <return statusCode="404"/>
        </api>

        <api port="2000">
            <response>
                <headerFilter>
                    <include>content.*</include>
                    <include>connection.*</include>
                    <exclude>.*</exclude>
                </headerFilter>
            </response>
            <log/>
            <target url="https://www.wikipedia.org"/>
        </api>

        <api port="3000">
            <response>
                <setHeader value="Server" name="Vulnerable Web Server 2.0"/>
                <setHeader value="Token" name="1234"/>
            </response>
            <return/>
        </api>

        <!--                           -->

        <api name="Color" port="2000">
            <request>
                <setProperty name="color" value="${param.color}"/>
            </request>
            <response>
                <setHeader name="X-Color" value="${property.color}"/>
            </response>
            <target host="localhost" port="2001"/>
        </api>

        <api name="backend" port="2001">
            <response>
                <static>Response from backend.</static>
            </response>
            <return/>
        </api>

        <api port="9000">
            <adminConsole/>
        </api>

        <api port="2000">
            <path>/products</path>
            <request>
                <call url="https://api.predic8.de/shop/v2/products"/>
                <setProperty name="products" value="${$.products}" language="jsonpath"/>
            </request>
            <response>
                <template>
                    ${property.products}
                </template>
            </response>
            <log/>
            <return/>
        </api>

        <api port="2000">
            <path>/places</path>
            <request>
                <setHeader name="Authorization" value="Basic YWxpY2U6Zmxvd2VyMjU="/>
                <!-- Request token -->
                <call url="http://localhost:2001/login"/>
            </request>
            <target url="http://localhost:2002"/>
        </api>

        <!-- Login and get a token -->
        <api port="2001">
            <path>/login</path>
            <basicAuthentication>
                <user username="alice" password="flower25"/>
            </basicAuthentication>
            <response>
                <setHeader name="x-token" value="123"/>
            </response>
            <return/>
        </api>

        <!-- Secured by simple token-->
        <api port="2002">
            <path>/places</path>
            <request>
                <if test="header['x-token'] != '123'">
                    <static>Unauthorized!</static>
                    <return statusCode="401"/>
                </if>
            </request>
            <static>
                {
                    "places": "Tokio", "Delhi", "Berlin"
                }
            </static>
            <return/>
        </api>

        <!--
        <api port="2000" name="hello">
            <apiKey required="true">
                <queryParamExtractor name="api-key"/>
            </apiKey>
            <request>
                <setProperty name="scopes" value="${scopes}"/>
                <template>
                    {
                        "sub": "user@example.com",
                        "aud": "order",
                        "scope": "${property.scopes}"
                    }
                </template>
                <jwtSign>
                    <jwk location="key.json"/>
                </jwtSign>
            </request>
            <target url="service://validator" />
        </api>

        <api port="2001" name="validator">
            <request>
                <setHeader name="Authorization" value="Bearer ${request.body.toString}" />
                <jwtAuth expectedAud="order">
                    <jwks>
                        <jwk location="key.json" />
                    </jwks>
                </jwtAuth>
            </request>
            <template>${property.jwt.get("scope")}</template>
            <return />
        </api>
        -->
    </router>

</spring:beans>
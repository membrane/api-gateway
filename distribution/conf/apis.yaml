# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
kind: api
spec:
  port: 2000
  target:
    url: https://api.predic8.de

---

# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
kind: api
spec:
  port: 2001
  path:
    uri: /fruit/{id}
  target:
    url: https://api.predic8.de/shop/v2/products/${pathParam.id}

---

# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2002
  specs:
    - openapi:
        location: "fruitshop-api.yml"
        validateRequests: yes

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2003
  flow:
    - log:
        message: "Headers: ${header}"
  target:
    url: https://api.predic8.de

---

# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2004
  path:
    uri: /shop
  target:
    url: https://api.predic8.de

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2005
  specs:
    - openapi:
        location: "fruitshop-api.yml"
        validateRequests: yes

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2007
  method: POST
  flow:
    - response:
        - static:
            src: |
              POST is blocked!
    - return:
        statusCode: 405

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2007
  path:
    uri: /shop/v2/products/.*
    isRegExp: true
  target:
    url: https://api.predic8.de

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2007
  path:
    uri: /shop
  target:
    url: https://api.predic8.de

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2007
  host: www.predic8.de
  flow:
    - response:
        - static:
            src: Homepage
    - return:
        statusCode: 200
  path:
    uri: /shop
  target:
    url: https://api.predic8.de


---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2008
  test: params.city == 'Paris'
  flow:
    - response:
        - static:
            src: Oui!
    - return:
        statusCode: 200

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2009
  path:
    uri: /health
  flow:
    - response:
      - static:
          src: I'm good.
    - return:
        statusCode: 200

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2010
  path:
    uri: /nothing
  flow:
    - response:
        - static:
            src: "Nothing to see here."
    - return:
        statusCode: 404

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2011
  flow:
    - rewriter:
       - map:
          from: ^/fruitshop/(.*)
          to: /shop/v2/$1
  target:
    url: https://api.predic8.de

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2012
  flow:
    - groovy:
        src: |
          println "I'm executed in the ${flow} flow"
          println "HTTP Headers:\n${header}"
  target:
    url: https://api.predic8.de

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2013
  flow:
    - groovy:
        src: |
          sites = ["https://api.predic8.de","https://membrane-api.io","https://predic8.de"]
          Collections.shuffle sites
          exchange.destinations = sites
  target: {}

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2014
  flow:
    - groovy:
        src: |
          Response.ok()
            .contentType("application/json")
            .header("X-Foo", "bar")
            .body("""
              {
                "success": true
              }""")
            .build()

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2015
  flow:
    - javascript:
        src: |
          console.log("------------ Headers: -------------");
          var fields = header.getAllHeaderFields();
          for (var i = 0; i < fields.length; i++) {
            console.log(fields[i]);
          }
  target:
    url: https://api.predic8.de

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2016
  flow:
    - javascript:
        src: |
          var body = JSON.stringify({
            foo: 7,
            bar: 42
          });
          Response.ok(body).contentType("application/json").build();

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2017
  flow:
    - response:
        - setHeader:
            name: Access-Control-Allow-Origin
            value: "*"
        - setHeader:
            name: Access-Control-Allow-Methods
            value: GET
  target:
    url: https://api.predic8.de

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2018
  flow:
    - response:
        - setHeader:
            name: X-Product-Id
            value: ${jsonPath('$.id')}
        - setHeader:
            name: X-Product-Name
            value: ${$.name}
            language: jsonpath
  target:
    url: https://api.predic8.de

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2019
  flow:
    - response:
        - headerFilter:
            rules:
              - include:
                  pattern: "X-XSS-Protection"
              - exclude:
                  pattern: "X-.*"
  target:
    url: https://www.predic8.de

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2020
  flow:
    - request:
        - template:
            contentType: application/json
            pretty: true
            src: |
              { "answer": ${params.answer} }
    - return:
        statusCode: 200

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2021
  flow:
    - request:
        - template:
            contentType: text/plain
            src: |
              City: ${json.city}
        - return:
            statusCode: 200

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2022
  flow:
    - request:
        - template:
            contentType: application/json
            src: |
              {
                "destination": "${json.city}"
              }
    - return:
        statusCode: 200

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2023
  flow:
    - request:
        - template:
            contentType: application/xml
            src: |
              <places>
                  <place>${json.city}</place>
              </places>            
    - return:
        statusCode: 200

---
spec:
  port: 2024
  flow:
    - request:
        - javascript:
            src: |
              function convertDate(d) {
                return d.getFullYear() + "-" + ("0"+(d.getMonth()+1)).slice(-2) + "-" + ("0"+d.getDate()).slice(-2);
              }

              ({
                id: json.id,
                date: convertDate(new Date(json.date)),
                client: json.customer,
                total: json.items.map(i => i.quantity * i.price).reduce((a,b) => a+b),
                positions: json.items.map(i => ({
                pieces: i.quantity,
                price: i.price,
                article: i.description
              }))
              })
    - return:
        statusCode: 200

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2025
  flow:
    - response:
      - beautifier: {} # Response flow is reversed
      - template:
          contentType: application/xml
          src: |
            <foo><bar>Baz</bar></foo>
    - return:
        statusCode: 200

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2026
  flow:
    - response:
        - if:
            test: statusCode matches '4\d\d'
            flow:
              - static:
                  src: "Stupid User!"
  target:
    url: https://api.predic8.de

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2027
  flow:
    - apiKey:
        stores:
          - keys:
              - secret:
                  value: abc123
              - secret:
                  value: secret123
    - return:
        statusCode: 200

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2028
  flow:
    - jwtAuth:
        expectedAud: "api://2axxxx16-xxxx-xxxx-xxxx-faxxxxxxxxf0"
        jwks:
          jwksUris: https://login.microsoftonline.com/common/discovery/keys
  target:
    url: https://api.predic8.de

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2029
  flow:
    - oauth2Resource2:
        membrane:
          src: https://accounts.google.com
          clientId: INSERT_CLIENT_ID
          clientSecret: INSERT_CLIENT_SECRET
          scope: email profile
          subject: sub
    - groovy:
        src: |
          // Get email from OAuth2 and forward it to the backend
          def oauth2 = exc.properties.'membrane.oauth2'
          header.setValue('X-EMAIL',oauth2.userinfo.email)
  target:
    url: https://backend

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
#spec:
#  port: 2030
#  flow:
#    - oauth2authserver:
#        location: logindialog
#        issuer: http://localhost:2000
#        consentFile: consent.json
#        staticUserDataProvider:
#          users:
#            - user:
#                username: john
#                password: secret
#                email: john@predic8.de
#        bearerJwtToken: {}
#        claims:
#          scopes:
#            - scope:
#                id: username
#  target:
#    url: http://backend


---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2031
  flow:
    - basicAuthentication:
        users:
          - user:
              username: bob
              password: secret
          - user:
              username: alice
              password: secret
  target:
    host: localhost
    port: 8080

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2032
  target:
    url: https://api.predic8.de

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 443
  ssl:
    keystore:
      location: membrane.p12
      password: secret
      keyPassword: secret
  target:
    host: localhost
    port: 8080

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2033
  flow:
    - xmlProtection:
        maxElementNameLength: 100
  target:
    url: https://api.predic8.de

---
# yaml-language-server: $schema=../../core/target/classes/com/predic8/membrane/core/config/json/membrane.schema.json
spec:
  port: 2034
  flow:
    - jsonProtection:
        maxDepth: 5
        maxKeyLength: 30
        maxStringLength: 100000
  target:
    url: https://api.predic8.de
<!--
	 *** Membrane Configuration ***

	 For more see:
	 - proxies-*.xml files in this folder
	 - The examples/* folders with working samples for proxies.xml
	 - Configuration Reference: https://membrane-soa.org/api-gateway-doc/current/configuration/reference/
	 - https://www.membrane-soa.org/service-proxy-doc/current/configuration/samples.htm

	 Start Membrane with:
	 ./service-proxy.sh or service-proxy.bat

	 A direct Internet access is needed to run this configuration!
     Otherwise, see proxies-offline.xml

     Use an XML editor with XML Schema syntax completion for easy editing like
	 Visual Studio Code or Intellij.

-->
<spring:beans xmlns="http://membrane-soa.org/proxies/1/"
			  xmlns:spring="http://www.springframework.org/schema/beans"
			  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			  xsi:schemaLocation="http://www.springframework.org/schema/beans
	                    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	                    http://membrane-soa.org/proxies/1/ http://membrane-soa.org/schemas/proxies-1.xsd">

	<router>

		<!-- 
			 Reads the configuration from an OpenAPI document
			 Open http://localhost:2000/api-doc and use the Swagger UI there
		-->
		<api port="2000">
			<openapi location="fruitshop-api.yml" validateRequests="yes"/>
		</api>

		<!--
			Open http://localhost:2000/names/Paula
			See: https://membrane-api.io/tutorials/rest/
		 -->
		<api port="2000">
			<path>/names</path>
			<rateLimiter requestLimit="3" requestLimitDuration="PT30S"/>
			<rewriter>
				<map from="^/names/(.*)" to="/restnames/name\.groovy\?name=$1" />
			</rewriter> 
			<response>
				<beautifier/>
				<log headerOnly="false"/> <!-- See console for logs -->
				<xml2Json/>
				<log headerOnly="false"/> 
			</response>
			<target url="http://www.thomas-bayer.com"/>
		</api>

		<!-- 
			 Dump HTTP headers and respond with an error
			 Open: localhost:2000/header and look at the console
		-->
		<api name="Groovy" port="2000">
			<path>/header</path>
			<request>
				<groovy>
					println "Request headers:"
					header.allHeaderFields.each {
						print it 
					}
					CONTINUE
				</groovy>
			</request>
			<template contentType="application/json">{ "ok": 1 }</template>
			<return statusCode="200"/>
		</api>

		<!-- Forward all other requests on port 2000 to https://api.predic8.de -->
		<api port="2000">
			<target url="https://api.predic8.de"/>
		</api>

		<!-- 
			 Administration UI
             Open http://localhost:9000 

             Secure access for production: See proxies-secure-sample.xml
		-->
		<api name="Console" port="9000">
			<adminConsole />
		</api>

	</router>

</spring:beans>
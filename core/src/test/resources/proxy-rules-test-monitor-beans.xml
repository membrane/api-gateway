<!-- Copyright 2009 predic8 GmbH, www.predic8.com Licensed under the Apache 
	License, Version 2.0 (the "License"); you may not use this file except in 
	compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:annotation-config />

	<bean id="router" class="com.predic8.membrane.core.Router">
		<property name="ruleManager">
			<bean class="com.predic8.membrane.core.RuleManager" />
		</property>
		<property name="transport" ref="transport" />
		<property name="exchangeStore" ref="exchangeStore" />
	</bean>

	<bean id="transport" class="com.predic8.membrane.core.transport.http.HttpTransport">
		
		<!-- 
   		Thread Pool Configuration
   		============================
   		To serve client requests a thread pool is consulted. See
   		
   		http://download.oracle.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.html	
   		
   		for details about the thread pool. 
   		The default for maxThreadPoolSize is unlimited. To limit the pool size 
   		uncomment the property maxThreadPoolSize.
    	-->
		
		 <!-- <property name="maxThreadPoolSize" value="500" />  -->
    	<property name="coreThreadPoolSize" value="20" />
		
		<property name="interceptors">
			<list>
				<bean
					class="com.predic8.membrane.core.interceptor.RuleMatchingInterceptor" />

				<bean class="com.predic8.membrane.core.interceptor.DispatchingInterceptor" />

				<bean
					class="com.predic8.membrane.core.interceptor.ExchangeStoreInterceptor">
					<property name="exchangeStore" ref="exchangeStore" />
				</bean>

				<!--  
					Saving messages into files
					============================
					The FileExchangeStore saves all captured messages to disk. 
					Uncomment the following bean and set value of the property dir 
					to the folder where you want to save messages. 
				-->			
				
				<!--  
				<bean
					class="com.predic8.membrane.core.interceptor.ExchangeStoreInterceptor">
					<property name="exchangeStore">
						<bean class="com.predic8.membrane.core.exchangestore.FileExchangeStore">
							<property name="dir" value="C:\temp" />
						</bean>
					</property>
				</bean>
				-->

				<!--
					Rewriting of URLs in WSDL documents 
					=================================== 
					The WSDLInterceptor changes the endpoint location and URLs of schema includes 
					and imports. For the rewritten URLs the protocol, hostname and port are extracted 
					from the request header. The hostname and port is taken from the Host header 
					field. 
				-->

				<bean class="com.predic8.membrane.core.interceptor.WSDLInterceptor">
					<!-- 
						To set static values for the rewritten URLs instead of values from 
						the WSDL requested uncomment the following elements. 
					-->
					<!-- 
						<property name="host" value="abc" /> 
						<property name="protocol" value="https" /> 
						<property name="port" value="" /> 
						<property name="registryWSDLRegisterURL" value="http://192.168.2.102:8010/register/wsdl" /> 
					-->
				</bean>

				<!-- 
					Storing exchange statistics in database 
					======================================= 
					You can store exchange statistical data on permanent storage. Please uncomment 
					the following bean definition and configure the bean below. Do not forget 
					to provide jdbc connector jar file in lib directory.
				-->
				
				<!-- 
					<bean class="com.predic8.membrane.core.interceptor.statistics.StatisticsJDBCInterceptor" init-method="init"> 
						<property name="dataSource" ref="dataSource" /> 
						<property name="postMethodOnly" value="true" /> 
						<property name="soapOnly" value="true" /> 
					</bean> 
				-->

				<!-- 
					Logging Router access to CSV 
					======================================= 
					You can store exchange metadata in CSV files to disc. The data will be appended 
					to the given file, and can be imported into Excel later on.
				 -->
				<!-- 
					<bean class="com.predic8.membrane.core.interceptor.statistics.StatisticsCSVInterceptor"> 
						<property name="displayName" value="CSV Statistics Interceptor" />
						<property name="fileName" value="C:\temp\exc-statistics.csv" /> 
					</bean> 
				-->
			</list>
		</property>
	</bean>

	<bean id="exchangeStore"
		class="com.predic8.membrane.core.exchangestore.ForgetfulExchangeStore" />

	<bean id="roundRobinBalancer"
		class="com.predic8.membrane.core.interceptor.balancer.LoadBalancingInterceptor">
		<property name="displayName" value="roundRobinBalancer" />
		<property name="dispatchingStrategy">
			<bean
				class="com.predic8.membrane.core.interceptor.balancer.RoundRobinStrategy" />
		</property>
	</bean>

	<bean id="byThreadBalancer"
		class="com.predic8.membrane.core.interceptor.balancer.LoadBalancingInterceptor">
		<property name="displayName" value="byThreadBalancer" />
		<property name="dispatchingStrategy">
			<bean
				class="com.predic8.membrane.core.interceptor.balancer.ByThreadStrategy">
				<property name="maxNumberOfThreadsPerEndpoint" value="10" />
				<property name="retryTimeOnBusy" value="1000" />
			</bean>
		</property>
	</bean>

	<!-- 
		Interceptor for access control. Only authorized clients can access 
		services. Mapping of public available services and clients is specified in 
		XML file. Value of aclFilename property is path to mapping file. 
	-->
	<bean id="accessControlInterceptor"
		class="com.predic8.membrane.core.interceptor.acl.AccessControlInterceptor">
		<property name="displayName" value="Access Control List Interceptor" />
		<property name="file" value="classpath:/acl/acl.xml" />
	</bean>

	<bean id="administratorInterceptor"
		class="com.predic8.membrane.core.interceptor.administration.AdminConsoleInterceptor">
		<property name="displayName" value="Admistrator Interceptor" />
	</bean>

	<!-- 
		Configuration of DataSource 
		============================ 
		If you have activated bean "statisticsJDBCInterceptor", you need to adjust one of the 
		bean definitions below. StatisticsJDBCInterceptor uses instance of javax.sql.DataSource 
		to manage connection pooling. Please provide all necessary information for correct 
		initialization of data source. Note: you have to put third party libraries in lib 
		directory before using JDBC interceptor. 
	-->
	<!-- 
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> 
			<property name="driverClassName" value="com.mysql.jdbc.Driver" /> 
			<property name="url" value="jdbc:mysql://localhost:3306/membrane" /> 
			<property name="username" value="root" /> 
			<property name="password" value="root" /> 
		</bean> 
	-->
	<!-- 
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> 
			<property name="driverClassName" value="org.apache.derby.jdbc.ClientDriver" /> 
			<property name="url" value="jdbc:derby://localhost:1527/membranedb-test;create=true" /> 
			<property name="username" value="APP" /> 
			<property name="password" value=" " /> 
		</bean> 
	-->
	
	<!-- 
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> 
			<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/> 
			<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:your-database"/>
			<property name="username" value="your-username" /> 
			<property name="password" value="your-password" /> 
		</bean>
	-->
	
</beans>

/* Copyright 2012 predic8 GmbH, www.predic8.com

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License. */

package com.predic8.membrane.core.config.spring;

import com.predic8.membrane.annot.AbstractNamespaceHandler;

public class NamespaceHandler extends AbstractNamespaceHandler {

	public void init() {
		/*
		 * If you get a compiler error in the following line, Annotation Processing
		 * is not working for you.
		 * 
		 * 
		 * When using Maven, it should work automatically. Make sure that
		 * * either you are building *all* service-proxy modules at once (invoking
		 *   "mvn" in service-proxy's main directory).
		 * * or you have installed the service-proxy-annot module locally (run
		 *   "mvn install" in service-proxy/annot once since the last version bump
		 *   before compiling service-proxy/core).
		 * 
		 * 
		 * When using Eclipse,
		 * 1. right-click the "service-proxy-annot" project, select "Run as",
		 *    "Maven install".
		 * 2. right-click the "service-proxy-core" project, select "Properties",
		 *    "Java compiler", "Annotation Processing" and enable "Project specific
		 *    settings" as well as "Annotation Processing".
		 * 3. Repeat step 2 for the service-proxy-war project.
		 */
		NamespaceHandlerAutoGenerated.registerBeanDefinitionParsers(this);
	}
	
}